name: End-to-end test
on:
  pull_request:
    paths-ignore:
      - '**.md'
    branches:
      - feature/*
      - bugfix/*
  push:
    branches:
      - master
      - feature/*
      - releases/*
    paths-ignore:
      - '**.md'

# node set up

jobs:
  node-setup:
    name: set up node and yarnv${{ matrix.node }}
    runs-on: ubuntu-latest
    outputs:
      logurl_node_setup: ${{ steps.log_url.outputs.log_url }}
      branch: ${{ steps.log_url.outputs.branch }}
    strategy:
      fail-fast: false
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: forming log url
        id: log_url
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./__scripts__/log_url.sh
      - name: Setup Node ${{ matrix.node-version }}
        if: ${{ success() }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: |
         echo "check for node"
         node -v

  lint-test:
    runs-on: ubuntu-latest
    needs: ['Node-setup']
    continue-on-error: false
    outputs:
      lint_log_url: ${{ steps.lint_log_url.outputs.log_url }}
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: forming log url
        id: lint_log_url
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            ./__scripts__/log_url.sh

      - name: Setup node 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: running the lint
        id: run_lint
        run: |
          echo "running lint"
          npm run lint

 # cypress test
 # cypess test

  cypress-test:
    runs-on: ubuntu-latest
    needs: ['lint-test']
    continue-on-error: true
    outputs:
      cypress_log_url: ${{ steps.cypress_log_url.outputs.log_url }}
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: checkout code
        id: cypress_log_url
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            ./__scripts__/log_url.sh
      - name: Setup node 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: run cypress test
        run: |
          echo "running cypress test"
      - uses: cypress-io/github-action@v1
        with:
          install: false
          working-directory: e2e

  # build run

  build:
    runs-on: ubuntu-latest
    needs: ['cypress-test']
    continue-on-error: false
    outputs:
      build_log_url: ${{ steps.build_log_url.outputs.log_url }}
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: checkout code
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            ./__scripts__/log_url.sh
      - name: runninng build
        if: ${{ success() }}
        run: |
          echo "inside build"
          npm run build

#
  msteam:
    runs-on: ubuntu-latest
    needs: ['node-setup', 'lint-test','cypress-test','build']
    if : always()
    steps:
      - name: send message to teams
        id: send_message_to_team
        run: |
          echo "Log url of node set up"
          echo "${{needs.node-setup.outputs.logurl_node_setup}}"
          echo "Branch name"
          echo "${{needs.node-setup.outputs.logurl_node_setup}}"
          echo "log url of lint"
          echo "${{needs.lint-test.outputs.lint_log_url}}"
          echo "log url of cypress test"
          echo "${{needs.cypress-test.outputs.cypress_log_url}}"
          echo "log url of  build"
          echo "${{needs.build.outputs.build_log_url}}"
          # check which job is failed. then set the url to outputs
          ##  condition log which job is failed will put later
          # FAILED_STEP_URL= $(echo "${{needs.node-setup.outputs.logurl_node_setup}}")
          # echo "##[set-output name=log_url;]$FAILED_STEP_URL"

#      - uses: dhollerbach/github-action-send-message-to-ms-teams@1.0.10
#        name: sending message to teams
#        id: message_to_teams
#        env:
#          LOG_URL_NODE_SETUP: ${{ steps.log_url.outputs.log_url }}
#        with:
#          webhook: 'https://outlook.office.com/webhook/cafe68be-269d-42e0-b0c6-ab1e82668a14@6e51e1ad-c54b-4b39-b598-0ffe9ae68fef/IncomingWebhook/eb64d16ee3cd4b1fb063b8b5ce306593/3f33d448-4328-47c6-99b9-960ae2570664'
#          message: '<strong>Build status for the ${{ steps.log_url.outputs.branch }}</strong>  is <strong> ${{job.status}} .  <strong><br>#                     Please check the logs in below links <br>#                      <a href="${{ steps.log_url.outputs.log_url }}">Links to Log</a>,
