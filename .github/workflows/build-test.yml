name: End-to-end test
on:
  pull_request:
    paths-ignore:
      - '**.md'
    branches:
      - feature/*
      - bugfix/*
  push:
    branches:
      - master
      - feature/*
      - releases/*
    paths-ignore:
      - '**.md'

# node set up

jobs:
  node-setup-lint-check:
    name: set up node and yarnv${{ matrix.node }}
    runs-on: ubuntu-latest
    outputs:
      logurl_node_setup: ${{ steps.log_url.outputs.log_url }}
      branch: ${{ steps.log_url.outputs.branch }}
      status:
    strategy:
      fail-fast: false
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: Setup Node ${{ matrix.node-version }}
        if: ${{ success() }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: |
         echo "check for node"
         node -v
      - name: running the lint
        id: run_lint
        run: |
            npm i
            echo "running lint"
            npm run lint
      - name: forming log url
        id: log_url
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "setting status of node set up"
          echo ${{ job.status }}
            ./__scripts__/log_url.sh
  cypress-test:
    runs-on: ubuntu-latest
    needs: ['node-setup-lint-check']
    continue-on-error: true
    outputs:
      cypress_log_url: ${{ steps.cypress_log_url.outputs.log_url }}
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: Setup node 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: run cypress test
        run: |
          echo "running cypress test"
      - uses: cypress-io/github-action@v1
        with:
          install: false
          working-directory: e2e
      - name: output url
        id: cypress_log_url
        if: always()
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "setting status of cypress test"
          echo ${{ job.status }}
            ./__scripts__/log_url.sh

  # build run

  build:
    runs-on: ubuntu-latest
    needs: ['cypress-test']
    continue-on-error: false
    outputs:
      build_log_url: ${{ steps.build_log_url.outputs.log_url }}
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: Setup node 12
        uses: actions/setup-node@v1
        with:
            node-version: 12.x
      - name: runninng build
        if: ${{ success() }}
        run: |
          echo "inside build"
          npm i
          npm run build
      - name: output url
        id: build_log_url
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            echo "setting status of cypress test"
            echo ${{ job.status }}
              ./__scripts__/log_url.sh

#
  msteam:
    runs-on: ubuntu-latest
    needs: ['node-setup-lint-check','cypress-test','build']
    if : always()
    steps:
      - name: send message to teams
        id: send_message_to_team
        run: |
          echo "Branch name"
          echo "${{needs.node-setup-lint-check.outputs.logurl_node_setup}}"
          echo "log url of cypress test"
          echo "${{needs.cypress-test.outputs.cypress_log_url}}"
          echo "log url of  build"
          echo "${{needs.build.outputs.build_log_url}}"
          # check which job is failed. then set the url to outputs
          # condition log which job is failed will put later
          # FAILED_STEP_URL= $(echo "${{needs.node-setup.outputs.logurl_node_setup}}")
          # echo "##[set-output name=log_url;]$FAILED_STEP_URL"
